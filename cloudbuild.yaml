steps:
  # Debug step (list files first)
  - name: "alpine"
    args: ["sh", "-c", "ls -la /workspace && ls -la /workspace/server"]

  # Precheck: Fail early if no Dockerfile exists
  - name: "alpine"
    args:
      [
        "sh",
        "-c",
        "if [ ! -f server/Dockerfile ]; then echo '‚ùå Missing server/Dockerfile'; exit 1; fi",
      ]

  # 1. Build Docker image
  - name: "gcr.io/cloud-builders/docker"
    dir: "server"
    args: [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/lightsout-server",
        ".", # Context is inside server
      ]

  # 2. Push Docker image to GCR
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/lightsout-server"]

  # 3. Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "deploy",
        "lightsout-server",
        "--image",
        "gcr.io/$PROJECT_ID/lightsout-server",
        "--region",
        "us-central1",
        "--platform",
        "managed",
        "--port",
        "8000",
        "--allow-unauthenticated",
      ]

images:
  - "gcr.io/$PROJECT_ID/lightsout-server"

options:
  machineType: "E2_HIGHCPU_8"
  logging: CLOUD_LOGGING_ONLY
